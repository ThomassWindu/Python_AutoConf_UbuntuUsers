#!/bin/bash
# ----->>>>>>>>>>> les variables <<<<<<<<<<--------------------
red=$'\e[1;31m' #${red}
grn=$'\e[1;32m' #${grn}
yel=$'\e[1;33m' #${yel}
blu=$'\e[1;34m' #${blu}
mag=$'\e[1;35m' #${mag}
cyn=$'\e[1;36m' #${cyn}
end=$'\e[0m'    #${end}  --> retour a la couleur blanche
#
#
# ---->>>>>>>>>>> fin des variables <<<<<<<<<<------------------
# ---->>>>>>>>>>> Fonctions <<<<<<<<<<<<<<<-----------------

echoBleu()
{
echo -e "${blu}${1}${end}" # affiche en vert
}

echoJaune()
{
echo -e "${yel}${1}${end}" # affiche en vert
}

echoVert()
{
echo -e "${grn}${1}${end}" # affiche en vert
}


echoRouge()
{
echo -e "${red}${1}${end}" # affiche en rouge
}


centreTexteEtCouleurs()

#a utiliser comme ceci 
# centreText "montexte" & "le petit caractere comme - à mettre avant et apes la chaine" & entier pour le padding comme 6 & ${red} ( voir nom des variables)
# exemple : centreText "j'ecris au milieu en rouge" "~" 0 ${red} ce qui donne  ~~~~~~~~~~~~~~~~~~j'ecris au milieu en rouge~~~~~~~~~~~~~~~~~~~~
# autre exemple : centreText "${red}rouge ${grn}vert ${yel}jaune ${blu}bleu" "=" 5 
{

    local terminal_width=$(tput cols)     # query the Terminfo database: number of columns
    local text="${1:?}"                   # text to center
    local glyph="${2:- }"                 # glyph to compose the border
    local padding="${3:-2}"               # spacing around the text

    local text_width=${#text}             

    local border_width=$(( (terminal_width - (padding * 2) - text_width) / 2 ))

    local border=                         # shape of the border

    # create the border (left side or right side)
    for ((i=0; i<border_width; i++))
    do
        border+="${glyph}"
    done

    # a side of the border may be longer (e.g. the right border)
    if (( ( terminal_width - ( padding * 2 ) - text_width ) % 2 == 0 ))
    then
        # the left and right borders have the same width
        local left_border=$border
        local right_border=$left_border
    else
        # the right border has one more character than the left border
        # the text is aligned leftmost
        local left_border=$border
        local right_border="${border}${glyph}"
    fi

    # space between the text and borders
    local spacing=

    for ((i=0; i<$padding; i++))
    do
        spacing+=" "
    done

    # displays the text in the center of the screen, surrounded by borders.
    printf "${left_border}${spacing}${4}${text}${end}${spacing}${right_border}${end}\n"
}

# ---->>>>>>>>>>> FIN des fonctions <<<<<<<<<<<<<<<-----------------
#
#    Programme permetant l'ajout d'utilisateur via une liste vers des postes d'une autre liste en SSH. Il est découpé en plusieurs fichiers
#    Copyright (C) 2021 Fay Thomas
#
#   Ce programme est un logiciel libre: vous pouvez le redistribuer et / ou le modifier
#    sous les termes de la licence publique générale GNU publiée par
#    la Free Software Foundation, soit la version 3 de la licence ou ulterieur.
#
#    Ce programme est distribué dans l'espoir qu'il sera utile,
#    mais SANS AUCUNE GARANTIE; sans même la garantie implicite de
#    QUALITÉ MARCHANDE ou ADAPTATION À UN USAGE PARTICULIER. Voir le
#    GNU General Public License pour plus de détails.
#
#    Licence disponible à la racine du projet.
#    Vous devriez avoir reçu une copie de la licence publique générale GNU
#    avec ce programme. Sinon, consultez <https://www.gnu.org/licenses/>.
